// <auto-generated />
using System;
using Bank.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bank.Database.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220421160734_CardCanBlock")]
    partial class CardCanBlock
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Bank.Database.Entities.BankAccountEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<long>("AccountNumber")
                        .HasColumnType("bigint");

                    b.Property<int?>("ClientFK")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ClientFK")
                        .IsUnique()
                        .HasFilter("[ClientFK] IS NOT NULL");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Bank.Database.Entities.CardEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("AccountFK")
                        .HasColumnType("int");

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<long>("CardNumber")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsBlock")
                        .HasColumnType("bit");

                    b.Property<short>("Password")
                        .HasColumnType("smallint");

                    b.HasKey("ID");

                    b.HasIndex("AccountFK");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("Bank.Database.Entities.ClientEntity", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("ID");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Bank.Database.Entities.BankAccountEntity", b =>
                {
                    b.HasOne("Bank.Database.Entities.ClientEntity", "Client")
                        .WithOne("Account")
                        .HasForeignKey("Bank.Database.Entities.BankAccountEntity", "ClientFK")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Bank.Database.Entities.CardEntity", b =>
                {
                    b.HasOne("Bank.Database.Entities.BankAccountEntity", "Account")
                        .WithMany("Cards")
                        .HasForeignKey("AccountFK");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Bank.Database.Entities.BankAccountEntity", b =>
                {
                    b.Navigation("Cards");
                });

            modelBuilder.Entity("Bank.Database.Entities.ClientEntity", b =>
                {
                    b.Navigation("Account");
                });
#pragma warning restore 612, 618
        }
    }
}
